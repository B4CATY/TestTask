@page "/parcer/xml"
@using TestTask.Shared
@inject IParcerXmlClientRepository repository
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime



<EditForm Model="@linkModel" OnValidSubmit="SubmitForm">
    <DataAnnotationsValidator/>
    <div class="form-group row">
        
        <div class="col-sm-6">
            <label for="link">Enter Link</label>
            <InputText id="link" class="form-control" @bind-Value="linkModel.Link" />
            <ValidationMessage For="@( () => linkModel.Link )" />
        </div>
    </div>
    <button type="submit" class="btn btn-outline-primary @disableButton">Submit</button>
</EditForm>



<h3 class="col-sm-8 text-center">Parcered Links From Bd</h3>
    <table class="table col-sm-8 m-3">
        <thead>
            <tr class="text-center">
                <th>Links</th>
                <th>More Info</th>
            </tr>
        </thead>
        <tbody>

        @if(links == null)
        {
            <tr class="text-center" >

                    <td style="position:relative; top:7px;">Table Is Empty Now</td>
                </tr>
        }

        else{
            foreach (var link in links)
            {
               <tr class="text-center" >

                    <td style="position:relative; top:7px;">@link.Link</td>
                    <td> 
                        <button class="btn btn-outline-secondary " value="@link.Id" @onclick="( () => ShowParcedLink(link.Id) )">Show</button>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>

@code {
    private List<LinkModel> links;
    private LinkModel linkModel = new LinkModel();

    private string disableButton = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadLinksAsync();
    }

    protected async Task LoadLinksAsync()
    {
        links = await repository.GetAllLinksAsync();
    }


    async Task SubmitForm()
    {
        Console.WriteLine(linkModel.Link);
        disableButton = "disabled";
        var result = await repository.Parce(linkModel);
        linkModel.Link = string.Empty;
        
        if (result)
            await JsRuntime.InvokeVoidAsync("alert", "Success"); // Alert

        else
            await JsRuntime.InvokeVoidAsync("alert", "Error"); // Alert
      
        disableButton = string.Empty;
        await LoadLinksAsync();

        
    }

    void ShowParcedLink(int id) => NavigationManager.NavigateTo($"parcer/xml/{id}");

}
